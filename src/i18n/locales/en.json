{
  "common": {
    "home": "Home",
    "loading": "Loading...",
    "save": "Save",
    "cancel": "Cancel",
    "delete": "Delete",
    "edit": "Edit",
    "view": "View",
    "add": "Add",
    "search": "Search",
    "filter": "Filter",
    "refresh": "Refresh",
    "export": "Export",
    "import": "Import",
    "download": "Download",
    "upload": "Upload",
    "close": "Close",
    "confirm": "Confirm",
    "back": "Back",
    "next": "Next",
    "previous": "Previous",
    "submit": "Submit",
    "reset": "Reset",
    "male": "Male",
    "female": "Female",
    "other": "Other",
    "unknown": "Unknown",
    "phone": "Phone",
    "email": "Email",
    "address": "Address",
    "age": "Age",
    "years": "years",
    "gender": "Gender",
    "status": "Status",
    "actions": "Actions",
    "createdDate": "Created Date",
    "updatedDate": "Updated Date",
    "noData": "No data",
    "error": "Error",
    "success": "Success",
    "warning": "Warning",
    "info": "Info",
    "yes": "Yes",
    "no": "No",
    "required": "is required"
  },
  "navigation": {
    "dashboard": "Dashboard",
    "patientManagement": "Patient Management",
    "medicineManagement": "Medicine Management",
    "prescriptionManagement": "Prescription Management",
    "contact": "Contact"
  },
  "patient": {
    "title": "Patient Management",
    "patientManagement": "Patient Management",
    "patientInfo": "Patient Info",
    "patientId": "Patient Code",
    "patientCode": "Patient Code",
    "fullName": "Full Name",
    "age": "Age",
    "years": "years",
    "gender": "Gender",
    "phone": "Phone",
    "email": "Email",
    "address": "Address",
    "dateOfBirth": "Date of Birth",
    "insurance": "Insurance Number",
    "createdDate": "Created Date",
    "actions": "Actions",
    "noData": "---",
    "notFound": "Patient information not found",
    "searchPatient": "Search patient",
    "searchPlaceholder": "Search patient...",
    "addPatient": "Add patient",
    "confirmDelete": "Confirm delete",
    "deleteConfirm": "Are you sure you want to delete this patient?",
    "deleteWarning": "This action cannot be undone.",
    "editPatient": "Edit patient",
    "deletePatient": "Delete patient",
    "back": "Back",
    "patientDetails": "Patient Details",
    "personalInfo": "Personal Information",
    "medicalInfo": "Medical Information",
    "bloodType": "Blood Type",
    "emergencyContact": "Emergency Contact",
    "medicalHistory": "Medical History",
    "allergies": "Allergies",
    "selectAllergies": "Select drug allergies",
    "treatmentHistory": "Treatment History",
    "overview": "Overview",
    "totalAppointments": "Total Appointments",
    "lastAppointment": "Last Appointment",
    "nextAppointment": "Next Appointment",
    "addTreatment": "Add New Treatment",
    "diagnosis": "Diagnosis",
    "symptoms": "Symptoms",
    "doctor": "Doctor",
    "notes": "Notes",
    "medicineList": "Medicine List",
    "treatmentDate": "Treatment Date",
    "treatmentStatus": "Treatment Status",
    "treatmentStatuses": {
      "MOI_TAO": "New",
      "DA_DUYET": "Approved",
      "DANG_DIEU_TRI": "In Progress",
      "HOAN_THANH": "Completed",
      "HUY_BO": "Cancelled"
    },
    "basicInfo": "Basic Information",
    "createSuccess": "Patient added successfully!",
    "createError": "An error occurred while adding patient",
    "updateSuccess": "Patient updated successfully!",
    "updateError": "An error occurred while updating patient",
    "deleteSuccess": "Patient deleted successfully!",
    "deleteError": "An error occurred while deleting patient",
    "medicalHistoryPlaceholder": "Enter medical history, one condition per line",
    "allergiesPlaceholder": "Select drugs that the patient is allergic to",
    "personalInformation": "Personal Information",
    "medicalInformation": "Medical Information",
    "contactInformation": "Contact Information",
    "insuranceInformation": "Insurance Information",
    "noTreatmentHistory": "No Treatment History",
    "noTreatmentHistoryDesc": "This patient has no treatment history recorded yet."
  },
  "medicine": {
    "title": "Medicine Management",
    "medicineManagement": "Medicine Management",
    "addMedicine": "Add New Medicine",
    "editMedicine": "Edit Medicine",
    "deleteMedicine": "Delete Medicine",
    "medicineInfo": "Medicine Information",
    "searchMedicine": "Search medicines...",
    "searchPlaceholder": "Search medicines...",
    "medicineName": "Medicine Name",
    "medicineCode": "Medicine Code",
    "medicineCategory": "Category",
    "medicineManufacturer": "Manufacturer",
    "medicinePrice": "Price (VND)",
    "medicineStock": "Stock",
    "medicineUnit": "Unit",
    "medicineStatus": "Status",
    "deleteConfirm": "Are you sure you want to delete this medicine?",
    "deleteWarning": "This action cannot be undone.",
    "medicines": "medicines",
    "medicine": "medicine",
    "createSuccess": "Medicine created successfully!",
    "createError": "An error occurred while creating medicine",
    "updateSuccess": "Medicine updated successfully!",
    "updateError": "An error occurred while updating medicine",
    "deleteSuccess": "Medicine deleted successfully!",
    "deleteError": "An error occurred while deleting medicine",
    "confirmDelete": "Confirm Delete Medicine",
    "activeIngredient": "Active Ingredient",
    "concentration": "Concentration",
    "dosageForm": "Dosage Form",
    "country": "Country",
    "sellingPrice": "Selling Price",
    "indications": "Indications",
    "contraindications": "Contraindications",
    "sideEffects": "Side Effects",
    "adultDosage": "Adult Dosage",
    "pediatricDosage": "Pediatric Dosage",
    "drugGroup": "Drug Group",
    "groups": {
      "antibiotic": "Antibiotic",
      "painkiller": "Painkiller",
      "antiInflammatory": "Anti-inflammatory",
      "cardiovascular": "Cardiovascular",
      "digestive": "Digestive",
      "respiratory": "Respiratory",
      "other": "Other"
    },
    "categories": {
      "painRelief": "Pain Relief",
      "antibiotic": "Antibiotic",
      "vitamin": "Vitamin",
      "cardiovascular": "Cardiovascular",
      "digestive": "Digestive"
    },
    "units": {
      "pill": "Pill",
      "bottle": "Bottle",
      "box": "Box",
      "pack": "Pack"
    },
    "available": "Available",
    "outOfStock": "Out of Stock",
    "discontinued": "Discontinued",
    "category": "Category",
    "manufacturer": "Manufacturer",
    "price": "Price",
    "stock": "Stock",
    "unit": "Unit",
    "expiryDate": "Expiry Date",
    "drugName": "Drug Name",
    "drugCode": "Drug Code",
    "activeIngredientName": "Active Ingredient Name",
    "concentrationValue": "Concentration",
    "dosageFormType": "Dosage Form",
    "manufacturerName": "Manufacturer Name",
    "countryOfOrigin": "Country of Origin",
    "priceValue": "Price",
    "unitOfMeasurement": "Unit of Measurement",
    "indicationsText": "Indications",
    "contraindicationsText": "Contraindications",
    "sideEffectsText": "Side Effects",
    "adultDosageText": "Adult Dosage",
    "pediatricDosageText": "Pediatric Dosage",
    "drugGroupType": "Drug Group",
    "isActive": "Active Status",
    "createdDate": "Created Date",
    "backToMedicines": "Back to Medicines",
    "medicineDetails": "Medicine Details",
    "noData": "No data",
    "loading": "Loading...",
    "error": "An error occurred",
    "createdAt": "Created Date",
    "actions": "Actions",
    "basicInfo": "Basic Information",
    "medicalInfo": "Medical Information",
    "editMedicine": "Edit Medicine",
    "deleteMedicine": "Delete Medicine"
  },
  "treatment": {
    "title": "Add New Treatment",
    "editTitle": "Edit Treatment",
    "addTreatment": "Add New Treatment",
    "diagnosisInfo": "Diagnosis Information",
    "diagnosisCode": "Diagnosis Code",
    "diagnosisCodePlaceholder": "Enter diagnosis code...",
    "mainDiagnosis": "Main Diagnosis",
    "mainDiagnosisPlaceholder": "Enter main diagnosis...",
    "secondaryDiagnosis": "Secondary Diagnosis",
    "secondaryDiagnosisPlaceholder": "Enter secondary diagnosis...",
    "diagnosis": "Diagnosis",
    "diagnosisPlaceholder": "Enter diagnosis...",
    "symptoms": "Symptoms",
    "symptomsPlaceholder": "Enter symptoms...",
    "doctor": "Treating Doctor",
    "treatingDoctor": "Treating Doctor",
    "treatingDoctorPlaceholder": "Enter doctor name...",
    "doctorPlaceholder": "Enter doctor name...",
    "treatmentDate": "Treatment Start Date",
    "startDate": "Treatment Start Date",
    "startDatePlaceholder": "Select start date...",
    "prescription": "Prescription",
    "medicine": "Medicine",
    "medicinePlaceholder": "Select medicine...",
    "quantity": "Quantity",
    "quantityPlaceholder": "e.g. 1",
    "dosage": "Dosage",
    "dosagePlaceholder": "e.g. 1 tablet",
    "route": "Route",
    "routePlaceholder": "Select route...",
    "frequency": "Frequency",
    "frequencyPlaceholder": "Select frequency...",
    "duration": "Duration",
    "durationPlaceholder": "Select duration...",
    "instructions": "Usage Instructions",
    "instructionsPlaceholder": "Enter usage instructions...",
    "unitPrice": "Unit Price",
    "totalPrice": "Total Price",
    "addMedicine": "Add New Medicine",
    "removeMedicine": "Remove Medicine",
    "notes": "Treatment Notes",
    "notesPlaceholder": "Enter treatment notes, patient instructions...",
    "saveTreatment": "Save Treatment",
    "cancelTreatment": "Cancel",
    "backToPatient": "Back to Patient Details",
    "summary": "Prescription Summary",
    "incompleteInfo": "Incomplete information",
    "selectMedicine": "No medicine selected",
    "confirmCancel": "Confirm Cancel",
    "cancelMessage": "Are you sure you want to cancel? Unsaved data will be lost.",
    "successMessage": "Treatment added successfully!",
    "createSuccess": "Treatment added successfully!",
    "createError": "An error occurred while adding treatment",
    "updateSuccessMessage": "Treatment updated successfully!",
    "errorMessage": "An error occurred, please try again",
    "patientInformation": "Patient Information",
    "prescriptionAnalysis": "Prescription Analysis",
    "treatmentForm": "Treatment Form",
    "medicineSelection": "Medicine Selection",
    "treatmentSummary": "Treatment Summary",
    "saveAndContinue": "Save and Continue",
    "previewPrescription": "Preview Prescription",
    "printPrescription": "Print Prescription",
    "sendToPatient": "Send to Patient",
    "validation": {
      "noMedicines": "Please add at least one medicine",
      "noValidMedicines": "Please fill complete information for at least one medicine",
      "incompleteMedicine": "Please fill complete medicine information",
      "duplicateMedicine": "Duplicate medicine found, please check again",
      "selectMedicine": "Please select medicine name",
      "enterQuantity": "Please enter quantity",
      "enterDosage": "Please enter dosage",
      "selectRoute": "Please select route",
      "selectFrequency": "Please select frequency",
      "selectDuration": "Please select duration"
    },
    "routes": {
      "oral": "Oral",
      "injection": "Injection",
      "topical": "Topical",
      "eyeDrops": "Eye Drops",
      "nasalDrops": "Nasal Drops",
      "spray": "Spray"
    },
    "frequencies": {
      "onceDaily": "Once daily",
      "twiceDaily": "Twice daily",
      "thriceDaily": "Three times daily",
      "fourTimesDaily": "Four times daily",
      "onceWeekly": "Once weekly",
      "twiceWeekly": "Twice weekly",
      "onceMonthly": "Once monthly"
    },
    "durations": {
      "threeDays": "3 days",
      "fiveDays": "5 days",
      "sevenDays": "7 days",
      "tenDays": "10 days",
      "fourteenDays": "14 days",
      "twentyOneDays": "21 days",
      "thirtyDays": "30 days",
      "oneMonth": "1 month",
      "twoMonths": "2 months",
      "threeMonths": "3 months",
      "sixMonths": "6 months",
      "oneYear": "1 year"
    },
    "medicineInfo": "Medicine Information",
    "noMedicineSelected": "No medicine selected",
    "totalMedicines": "Total Medicines",
    "totalQuantity": "Total Quantity",
    "totalCost": "Total Cost",
    "medicines": "medicines",
    "units": "units",
    "prescriptionSummary": "Prescription Summary",
    "medicineName": "Medicine Name",
    "medicineNamePlaceholder": "Medicine name will be auto-filled",
    "selectMedicine": "Select Medicine",
    "unitPricePlaceholder": "Enter unit price",
    "usageInstructions": "Usage Instructions",
    "usageInstructionsPlaceholder": "Enter medicine usage instructions",
    "confirmDeleteMedicine": "Confirm Delete Medicine",
    "deleteMedicineWarning": "Are you sure you want to remove this medicine from the prescription?",
    "noMedicinesAdded": "No medicines have been added to the prescription yet",
    "totalQuantity": "Total Quantity",
    "totalAmount": "Total Amount",
    "medicinePlaceholder": "Select medicine...",
    "routePlaceholder": "Select route...",
    "frequencyPlaceholder": "Select frequency...",
    "durationPlaceholder": "Select duration...",
    "instructionsPlaceholder": "Enter usage instructions...",
    "medicineList": "Medicine List",
    "placeholderTitle": "Please select medicines from the prescription form to start automatic analysis",
    "placeholderDescription": "The system will automatically analyze drug interactions and contraindications based on patient information",
    "placeholderFeature1": "Select medicines from the list to activate automatic analysis",
    "placeholderFeature2": "Allergies and medical_history information from PatientInfo",
    "placeholderFeature3": "Drug interaction and contraindication analysis will be performed automatically",
    "diagnosisCodeGenerated": "Diagnosis code generated successfully",
    "diagnosisCodeError": "An error occurred while generating diagnosis code",
    "generateDiagnosisCode": "Auto-generate diagnosis code"
  },
  "prescription": {
    "title": "Prescription Management",
    "prescriptionManagement": "Prescription Management",
    "addPrescription": "Add New Prescription",
    "editPrescription": "Edit Prescription",
    "prescriptionInfo": "Prescription Information",
    "searchPrescription": "Search prescriptions...",
    "prescriptionCode": "Prescription Code",
    "patientName": "Patient Name",
    "doctorName": "Prescribing Doctor",
    "prescriptionDate": "Prescription Date",
    "prescriptionStatus": "Prescription Status",
    "prescriptionNotes": "Notes",
    "medicineCount": "Medicine Count",
    "selectPatient": "Select patient",
    "enterDoctorName": "Enter doctor name",
    "enterNotes": "Enter notes for prescription",
    "deleteConfirm": "Are you sure you want to delete this prescription?",
    "deleteWarning": "This action cannot be undone.",
    "prescriptions": "prescriptions",
    "prescription": "prescription",
    "createSuccess": "Prescription created successfully!",
    "createError": "An error occurred while creating prescription",
    "updateSuccess": "Prescription updated successfully!",
    "updateError": "An error occurred while updating prescription",
    "deleteSuccess": "Prescription deleted successfully!",
    "deleteError": "An error occurred while deleting prescription",
    "confirmDelete": "Confirm Delete Prescription",
    "viewDetails": "View Details",
    "addMedicine": "Add Medicine",
    "removeMedicine": "Remove Medicine",
    "medicineList": "Medicine List",
    "totalAmount": "Total Amount",
    "status": {
      "new": "New",
      "approved": "Approved",
      "inProgress": "In Progress",
      "completed": "Completed",
      "cancelled": "Cancelled"
    }
  },
  "dashboard": {
    "title": "Dashboard",
    "subtitle": "Intelligent Healthcare Management System",
    "welcome": "Welcome to the MediChecker system",
    "projectDescription": "Project Description",
    "whatIsMediChecker": "What is MediChecker?",
    "medicheckerDescription": "MediChecker is an intelligent healthcare management system designed to support healthcare facilities in efficiently and safely managing patients, medicines, and prescriptions.",
    "keyFeatures": "Key Features",
    "feature1": "Patient management with comprehensive medical records",
    "feature2": "Medicine inventory management and stock control",
    "feature3": "Create and manage prescriptions with drug interaction checking",
    "feature4": "Medical analysis and statistical reporting",
    "totalPatients": "Total Patients",
    "medicinesInStock": "Medicines in Stock",
    "todayAppointments": "Today's Appointments",
    "medicalRecords": "Medical Records",
    "recentActivities": "Recent Activities",
    "statistics": "Statistics",
    "recentActivitiesPlaceholder": "List of recent activities will be displayed here...",
    "statisticsPlaceholder": "Statistical charts will be displayed here...",
    "technologyStack": "Technology Stack",
    "frontend": "Frontend",
    "backend": "Backend",
    "frontendDescription": "Using Cursor AI to initialize source base, generate UI, create API services, push code to GitHub",
    "backendDescription": "Using v0.app to build source base, create database, API",
    "frontendTech": "React, TypeScript, Ant Design, Vite",
    "backendTech": "Java, Spring Boot, PostgreSQL, REST API",
    "frontendDetails": "Frontend Details",
    "backendDetails": "Backend Details",
    "frontendFeatures": "Frontend Features",
    "backendFeatures": "Backend Features",
    "frontendFeature1": "• Using Cursor AI to initialize source base",
    "frontendFeature2": "• Creating UI components with Ant Design",
    "frontendFeature3": "• State management with Zustand",
    "frontendFeature4": "• Routing with React Router DOM",
    "frontendFeature5": "• Internationalization with react-i18next",
    "frontendFeature6": "• Styling with styled-components",
    "backendFeature1": "• Using v0.app to build source base",
    "backendFeature2": "• Designing database schema with JPA/Hibernate",
    "backendFeature3": "• Creating RESTful API endpoints with Spring Boot",
    "backendFeature4": "• Handling authentication & authorization with Spring Security",
    "backendFeature5": "• Database migration with Flyway/Liquibase",
    "backendFeature6": "• API documentation with SpringDoc OpenAPI",
    "developmentTools": "Development Tools",
    "versionControl": "Version Control",
    "deployment": "Deployment",
    "frontendTools": "Cursor AI, VS Code, Chrome DevTools",
    "backendTools": "v0.app, IntelliJ IDEA, pgAdmin",
    "versionControlTools": "Git, GitHub, Git Flow",
    "deploymentTools": "Docker, AWS, Azure, Heroku",
    "aiAgent": "AI Agent",
    "aiAgentTitle": "Using AI Agent in Development",
    "aiAgentDescription": "Discover how AI Agent helps accelerate development and improve code quality",
    "cursorAI": "Cursor AI",
    "v0App": "v0.app",
    "cursorAIDescription": "AI-powered code editor that helps create code quickly and accurately",
    "v0AppDescription": "AI-powered platform to create full-stack applications from natural language descriptions",
    "aiAgentAdvantages": "AI Agent Advantages",
    "aiAgentDisadvantages": "AI Agent Disadvantages",
    "advantage1": "• Increase development speed by 3-5x",
    "advantage2": "• Automate repetitive tasks",
    "advantage3": "• Reduce syntax and logic errors",
    "advantage4": "• Support multiple programming languages",
    "advantage5": "• Integrate with existing development tools and processes",
    "advantage6": "• Learn from project and current context",
    "disadvantage1": "• May generate non-optimized code",
    "disadvantage2": "• Depends on prompt quality",
    "disadvantage3": "• Requires thorough review and testing",
    "disadvantage4": "• May violate code copyright",
    "disadvantage5": "• Cannot understand complex business logic",
    "disadvantage6": "• Requires continuous human supervision",
    "bestPractices": "Best Practices for Using AI Agent",
    "practice1": "• Write clear and specific prompts",
    "practice2": "• Break down tasks into simple steps",
    "practice3": "• Review and test the generated code",
    "practice4": "• Use AI to learn, not replace",
    "practice5": "• Combine with human experience",
    "practice6": "• Continuously update and improve prompts",
    "developmentWorkflow": "Development Workflow with AI",
    "workflow1": "1. Analyze requirements and design architecture",
    "workflow2": "2. Use AI to generate initial sample code",
    "workflow3": "3. Customize and optimize code",
    "workflow4": "4. Testing and debugging",
    "workflow5": "5. Code review and refactoring",
    "workflow6": "6. Deploy and monitor",
    "autoGenerate": "Auto Generate",
    "generateDiagnosisCode": "Generate Diagnosis Code",
    "diagnosisCodeFormat": "Code Format",
    "diagnosisCodePlaceholder": "Press button to auto-generate code",
    "diagnosisCodeGenerated": "Diagnosis code generated successfully",
    "diagnosisCodeError": "Error generating diagnosis code"
  },
  "about": {
    "title": "About",
    "subtitle": "Intelligent Healthcare Management System",
    "projectDescription": "Project Description",
    "whatIsMediChecker": "What is MediChecker?",
    "medicheckerDescription": "MediChecker is an intelligent healthcare management system designed to support healthcare facilities in efficiently and safely managing patients, medicines, and prescriptions.",
    "keyFeatures": "Key Features",
    "feature1": "Patient management with comprehensive medical records",
    "feature2": "Medicine inventory management and stock control",
    "feature3": "Create and manage prescriptions with drug interaction checking",
    "feature4": "Medical analysis and statistical reporting",
    "technologyStack": "Technology Stack",
    "frontend": "Frontend",
    "backend": "Backend",
    "frontendDescription": "Using Cursor AI to initialize source base, generate UI, create API services, push code to GitHub",
    "backendDescription": "Using v0.app to build source base, create database, API",
    "frontendTech": "React, TypeScript, Ant Design, Vite",
    "backendTech": "Java, Spring Boot, PostgreSQL, REST API",
    "aiAgent": "AI Agent",
    "aiAgentTitle": "Using AI Agent in Development",
    "aiAgentDescription": "Discover how AI Agent helps accelerate development and improve code quality",
    "cursorAI": "Cursor AI",
    "v0App": "v0.app",
    "cursorAIDescription": "AI-powered code editor that helps create code quickly and accurately",
    "v0AppDescription": "AI-powered platform to create full-stack applications from natural language descriptions",
    "aiAgentAdvantages": "AI Agent Advantages",
    "aiAgentDisadvantages": "AI Agent Disadvantages",
    "advantage1": "• Increase development speed by 3-5x",
    "advantage2": "• Automate repetitive tasks",
    "advantage3": "• Reduce syntax and logic errors",
    "advantage4": "• Support multiple programming languages",
    "advantage5": "• Integrate with existing development tools and processes",
    "advantage6": "• Learn from project and current context",
    "disadvantage1": "• May generate non-optimized code",
    "disadvantage2": "• Depends on prompt quality",
    "disadvantage3": "• Requires thorough review and testing",
    "disadvantage4": "• May violate code copyright",
    "disadvantage5": "• Cannot understand complex business logic",
    "disadvantage6": "• Requires continuous human supervision",
    "bestPractices": "Best Practices for Using AI Agent",
    "practice1": "• Write clear and specific prompts",
    "practice2": "• Break down tasks into simple steps",
    "practice3": "• Review and test the generated code",
    "practice4": "• Use AI to learn, not replace",
    "practice5": "• Combine with human experience",
    "practice6": "• Continuously update and improve prompts",
    "developmentWorkflow": "Development Workflow with AI",
    "workflow1": "1. Analyze requirements and design architecture",
    "workflow2": "2. Use AI to generate initial sample code",
    "workflow3": "3. Customize and optimize code",
    "workflow4": "4. Testing and debugging",
    "workflow5": "5. Code review and refactoring",
    "workflow6": "6. Deploy and monitor",
    "teamTitle": "Development Team",
    "teamDescription": "Meet the talented engineers who created MediChecker",
    "teamMember1": "Cuong NT",
    "teamMember2": "Long PQ",
    "teamMember3": "Tuyen TV",
    "role1": "Team Lead",
    "role2": "Frontend Developer",
    "role3": "Backend Developer",
    "member1Desc": "Team Lead with experience in leading development teams, project management and smart healthcare system architecture.",
    "member2Desc": "Frontend engineer specializing in React, TypeScript and modern user interface design, ensuring the best user experience.",
    "member3Desc": "Backend engineer specializing in database design, API development, and healthcare information security systems.",
    "missionVision": "Mission & Vision",
    "mission": "Mission",
    "missionDescription": "Provide intelligent, safe and effective healthcare management solutions, helping healthcare facilities improve patient care quality.",
    "vision": "Vision",
    "visionDescription": "Become the leading healthcare management system, applying AI technology to optimize medical processes and protect community health."
  },
  "analysis": {
    "title": "Prescription Analysis",
    "prescriptionAnalysis": "Prescription Analysis",
    "interactionAnalysis": "Drug Interaction Analysis",
    "inappropriateDrugAnalysis": "Inappropriate Drug Analysis",
    "duplicateIndicationAnalysis": "Duplicate Indication Analysis",
    "contraindicationAnalysis": "Contraindication Analysis",
    "analyzePrescription": "Analyze Prescription",
    "analysisResults": "Analysis Results",
    "safetyScore": "Safety Score",
    "safetyLevel": {
      "AN_TOAN": "Safe",
      "CAN_THAN_TRONG": "Caution Required",
      "NGUY_HIEM": "Dangerous"
    },
    "overview": "Overview",
    "totalMedicines": "Total Medicines",
    "totalCost": "Total Cost",
    "safetyLevel": "Safety Level",
    "recommendations": "Recommendations",
    "compatible": "Compatible",
    "necessary": "Necessary",
    "unnecessary": "Unnecessary",
    "detailedReport": "Detailed Report",
    "analysisDate": "Analysis Date",
    "analyzer": "Analyzer",
    "notes": "Notes",
    "noAnalysisData": "No analysis data available",
    "startAnalysis": "Start Analysis",
    "analysisInProgress": "Analysis in progress...",
    "analysisComplete": "Analysis complete",
    "analysisError": "Analysis error occurred",
    "drugInteractions": "Drug Interactions",
    "allergyWarnings": "Allergy Warnings",
    "dosageWarnings": "Dosage Warnings",
    "contraindicationWarnings": "Contraindication Warnings",
    "sideEffectWarnings": "Side Effect Warnings",
    "costAnalysis": "Cost Analysis",
    "safetyRecommendations": "Safety Recommendations",
    "patientSpecificWarnings": "Patient-Specific Warnings",
    "interactionSeverity": "Interaction Severity",
    "riskLevel": "Risk Level",
    "lowRisk": "Low Risk",
    "mediumRisk": "Medium Risk",
    "highRisk": "High Risk",
    "criticalRisk": "Critical Risk"
  },
  "benhLyNen": {
    "title": "Medical History List",
    "addBenhLyNen": "Add Medical History",
    "editBenhLyNen": "Edit Medical History",
    "deleteBenhLyNen": "Delete Medical History",
    "benhLyNenInfo": "Medical History Information",
    "maBenh": "Disease Code",
    "tenBenh": "Disease Name",
    "moTa": "Description",
    "ngayChanDoan": "Diagnosis Date",
    "mucDoNghiemTrong": "Severity Level",
    "mucDoNghiemTrongOptions": {
      "NHE": "Mild",
      "VUA": "Moderate",
      "NANG": "Severe",
      "RAT_NANG": "Very Severe"
    },
    "createSuccess": "Medical history added successfully",
    "createError": "Error adding medical history",
    "updateSuccess": "Medical history updated successfully",
    "updateError": "Error updating medical history",
    "deleteSuccess": "Medical history deleted successfully",
    "deleteError": "Error deleting medical history",
    "confirmDelete": "Confirm Delete Medical History",
    "deleteConfirm": "Are you sure you want to delete this medical history?",
    "deleteWarning": "This action cannot be undone.",
    "noData": "No medical history",
    "loading": "Loading...",
    "error": "Error",
    "maBenhMaxLength": "Disease code cannot exceed 10 characters",
    "maBenhDuplicate": "Disease code already exists"
  },
  "diUng": {
    "title": "Drug Allergy List",
    "addDiUng": "Add Drug Allergy",
    "editDiUng": "Edit Drug Allergy",
    "deleteDiUng": "Delete Drug Allergy",
    "diUngInfo": "Drug Allergy Information",
    "thuoc": "Medicine",
    "selectThuoc": "Select Medicine",
    "selectMucDo": "Select Severity Level",
    "trieuChung": "Symptoms",
    "trieuChungPlaceholder": "Enter allergy symptoms",
    "mucDoNghiemTrong": "Severity Level",
    "mucDoNghiemTrongOptions": {
      "NHE": "Mild",
      "VUA": "Moderate",
      "NANG": "Severe",
      "RAT_NANG": "Very Severe"
    },
    "ngayXuatHien": "Occurrence Date",
    "ghiChu": "Notes",
    "ghiChuPlaceholder": "Enter additional notes",
    "noMedicineFound": "No medicine found",
    "createSuccess": "Drug allergy added successfully",
    "createError": "Error adding drug allergy",
    "updateSuccess": "Drug allergy updated successfully",
    "updateError": "Error updating drug allergy",
    "deleteSuccess": "Drug allergy deleted successfully",
    "deleteError": "Error deleting drug allergy",
    "confirmDelete": "Confirm Delete Drug Allergy",
    "deleteConfirm": "Are you sure you want to delete this drug allergy?",
    "deleteWarning": "This action cannot be undone.",
    "noData": "No drug allergies",
    "loading": "Loading...",
    "error": "Error"
  },
  "validation": {
    "required": "Please enter {{field}}!",
    "email": "Invalid email!"
  },
  "messages": {
    "confirmDelete": "Are you sure you want to delete?"
  },
  "contact": {
    "title": "Contact Us",
    "subtitle": "Discover MediChecker and meet our development team",
    "slide1": {
      "title": "Smart Healthcare Management",
      "description": "MediChecker is an advanced healthcare management system that helps healthcare facilities efficiently and safely manage patients, medicines, and prescriptions."
    },
    "slide2": {
      "title": "Safe and Accurate",
      "description": "Automatic drug interaction checking system, allergy warnings, and ensuring patient safety during treatment."
    },
    "slide3": {
      "title": "Advanced Technology",
      "description": "Using AI and machine learning to analyze prescriptions, optimize processes, and improve healthcare quality."
    },
    "slide4": {
      "title": "Professional Team",
      "description": "Developed by an experienced engineering team, committed to bringing the best healthcare solutions to the community."
    },
    "features": {
      "feature1": {
        "title": "Patient Management",
        "description": "Comprehensive medical records, detailed treatment history, and securely protected personal information."
      },
      "feature2": {
        "title": "Medicine Control",
        "description": "Smart medicine inventory management, expiry date checking, and ensuring medicine quality."
      },
      "feature3": {
        "title": "Prescription Analysis",
        "description": "Automatic drug interaction checking, contraindication warnings, and providing safety recommendations."
      },
      "feature4": {
        "title": "Statistical Reports",
        "description": "Detailed reports on healthcare activities, helping with management and effective decision-making."
      }
    },
    "team": {
      "title": "Development Team",
      "description": "Meet the talented engineers who created MediChecker",
      "role1": "Team Lead",
      "role2": "Frontend Developer",
      "role3": "Backend Developer",
      "member1Desc": "Team Lead with experience in leading development teams, project management and smart healthcare system architecture.",
      "member2Desc": "Frontend engineer specializing in React, TypeScript and modern user interface design, ensuring the best user experience.",
      "member3Desc": "Backend engineer specializing in database design, API development, and healthcare information security systems."
    },
    "contactInfo": {
      "title": "Contact Information",
      "description": "Contact us for support and consultation",
      "email": "Email",
      "github": "GitHub",
      "linkedin": "LinkedIn"
    }
  }
} 